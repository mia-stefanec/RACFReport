 PRACF2: PROC(DCPTR) OPTIONS(MAIN);

 /*******************************************************************/
 /*       DEKLARACIJA POTREBNIH VARIJABLI I STRUKTURA PROGRAMA      */
 /*******************************************************************/
 DCL
 1 ULAZ,
       2 LEN       BIN FIXED(31,0),
       2 *         CHAR(2),
       2 TRN_CODE  CHAR(9),
       2 DATAU,
        3 KLASA    CHAR(8),
        3 RESURS   CHAR(44),
        3 DATOD    CHAR(8),
        3 DATDO    CHAR(8);

 DCL
 1 IZLAZ,
       2 LEN       BIN FIXED(31,0) INIT((SIZE(IZLAZ) - 2)),
       2 *         BIT(8),
       2 ATTR      CHAR(1),
       2 DATAI,
        3 UVJKLASA   CHAR(8),  /*UVJET PRETRAGE, KLASA*/
        3 UVJRES     CHAR(44),   /*UVJET PRETRAGE, RESURS*/
        3 UVJDATOD   CHAR(10),
        3 UVJDATDO   CHAR(10),
        3 REZ_TABLICA(5) UNALIGNED,
          4 LBL_DOGADJAJ      CHAR(3) INIT((*)('   ')),
          4 LBL_KORISNIK      CHAR(2) INIT((*)('  ')),
          4 LBL_ZAHTJEV       CHAR(2) INIT((*)('  ')),
          4 LBL_KLASA         CHAR(3) INIT((*)('   ')),
          4 LBL_RESURS        CHAR(4) INIT((*)('    ')),
          4 DATUM             CHAR(10),
          4 VRIJEME           CHAR(8),
          4 DOGADJAJ          CHAR(8),
          4 KORISNIK          CHAR(8),
          4 ZAHTJEV           CHAR(8),
          4 KLASA             CHAR(8),
          4 RESURS            CHAR(44),
        3 PORUKA              CHAR(79);

 DCL DCPTR POINTER;

 DCL
 1 DCMASK    BASED(DCPTR),
      2 CLTIME   CHAR(8),
      2 *        CHAR(2),
      2 CSTATUS  CHAR(2),
      2 CDATE    DECIMAL FIXED(7),
      2 CTIME    DECIMAL FIXED(7),
      2 CMRBR    BIN FIXED(31),
      2 CMOD     CHAR(8),
      2 CUSER    CHAR(8);

 DCL PLITDLI ENTRY;
 DCL RZ0AER ENTRY;
 DCL OPCIJA CHAR(4) VALUE('1');

 ON ERROR SNAP;

 DCL PAR_NUM BINARY FIXED(31) INITIAL(0),
 DESIGN_NAME CHARACTER(8) VALUE('EB7Z60O2');

 DCL FIRSTREC BIT(1); /*FLAG FOR FIRST RECORD*/
 DCL COUNTREC BIN FIXED(15) INIT(0); /*COUNTER FOR SCREEN*/
 DCL
 1 SQL_FILTERES,
   2 NULLIND1 BIN FIXED(15) INIT(0),
   2 TPDATOD  CHAR(10)      INIT(''),
   2 NULLIND2 BIN FIXED(15) INIT(0),
   2 TPDATDO  CHAR(10)      INIT(''),
   2 NULLIND3 BIN FIXED(15) INIT(0),
   2 NULLIND4 BIN FIXED(15) INIT(0);

 EXEC SQL INCLUDE SQLCA;
 EXEC SQL INCLUDE VACCESS;
 /******************************************************************/
 /*                KREIRANJE KURSORA ZA PRISTUP DB                 */
 /******************************************************************/
 EXEC SQL
    DECLARE SEARCHDATA CURSOR FOR
    SELECT  EVENT_QUAL,
    EVT_USER_ID,
    TIME_WRITTEN,
    DATE_WRITTEN,
    REQUEST,
    CLASS,
    RES_NAME
    FROM   VACCESS
    WHERE  CLASS LIKE CONCAT(NVL(:DATAU.KLASA:NULLIND1,'%'),'%')
    AND RES_NAME LIKE CONCAT(NVL(:DATAU.RESURS:NULLIND2,'%'),'%')
    AND (DATE_WRITTEN BETWEEN NVL(:TPDATOD:NULLIND3,'0001-01-01')
        AND NVL(:TPDATDO:NULLIND4,CURRENT DATE))
    AND EVENT_QUAL <> 'SUCCESS'
    ORDER BY TIMESTAMP_WRITTEN DESC;
 /******************************************************************/
 /*                       GLAVNI DIO PROGRAMA                      */
 /******************************************************************/

 ULAZ = '';
 FIRSTREC = '1'B;
 COUNTREC = 0;

 PAR_NUM = 3;
 CALL PLITDLI(PAR_NUM, 'GU  ', DCPTR, ULAZ);

 DO WHILE(CSTATUS <> 'QC');
    IF CSTATUS <> '  ' THEN
     CALL RZ0AER(DCMASK, 'CISRT-1', ULAZ, OPCIJA);
   /**************************************************************/
   /*                PROVJERA UNESENIH UVJETA I                  */
   /*                 POZIV FUNKCIJE FETCHDATA                   */
   /**************************************************************/

    IF((DATAU.KLASA <> '' & DATAU.RESURS <> '') &
      (DATAU.DATOD <> '' & DATAU.DATDO <> ''))
    THEN
     CALL FETCHDATA;
    ELSE IF(DATAU.KLASA <> '' & DATAU.RESURS <> '') THEN CALL FETCHDATA;
	ELSE IF(DATAU.DATOD <> '' & DATAU.DATDO <> '') THEN CALL FETCHDATA;
	ELSE
     DO;
       IZLAZ.PORUKA = RIGHT('NEISPRAVAN UNOS!',LENGTH(IZLAZ.PORUKA));
       CALL P_SEND;
     END;

    FIRSTREC = '1'B;
    COUNTREC = 0;

    PAR_NUM = 3;
    CALL PLITDLI(PAR_NUM, 'GU  ', DCPTR, ULAZ);
 END;

 FETCHDATA: PROC;

   IF (DATAU.KLASA =  '')
   THEN NULLIND1 = -1;

   IF (DATAU.RESURS = '')
   THEN NULLIND2 = -1;

   IF (DATAU.DATOD = '')
   THEN NULLIND3 = -1;
   ELSE TPDATOD = REPATTERN(DATAU.DATOD,'YYYY-MM-DD','DDMMYYYY');

   IF (DATAU.DATDO = '')
   THEN NULLIND4 = -1;
   ELSE TPDATDO = REPATTERN(DATAU.DATDO,'YYYY-MM-DD','DDMMYYYY');

   EXEC SQL OPEN SEARCHDATA;
   DO WHILE(SQLCODE = 0);
     REINIT VACCESS;
     EXEC SQL
       FETCH SEARCHDATA INTO
       :VACCESS.EVENT_QUAL,
       :VACCESS.EVT_USER_ID,
       :VACCESS.TIME_WRITTEN,
       :VACCESS.DATE_WRITTEN,
       :VACCESS.REQUEST,
       :VACCESS.CLASS,
       :VACCESS.RES_NAME;
     IF SQLCODE <> 0 THEN LEAVE;
     CALL PREPARE_SCREEN;
   END;

   IF(SQLCODE < 0) THEN
     DO;
       CALL RZ0AER(SQLCA, 'S ERRFETCH',VACCESS,OPCIJA);
     END;

   IF SQLCODE = 100 THEN
     DO;
       IF (FIRSTREC <> '0'B) THEN
         DO;
           IZLAZ.PORUKA = RIGHT('NEMA PODATAKA ZA TRAZENE UVJETE',
                                LENGTH(IZLAZ.PORUKA));
         END;
       ELSE
         DO;
           IZLAZ.PORUKA = RIGHT('NEMA VISE PODATAKA',
                                LENGTH(IZLAZ.PORUKA));
         END;
       CALL P_SEND;
     END;
   EXEC SQL CLOSE SEARCHDATA;
 END FETCHDATA;


 PREPARE_SCREEN: PROC;

    IF COUNTREC = 5 THEN
      DO;
        IZLAZ.PORUKA = RIGHT('NASTAVAK',LENGTH(IZLAZ.PORUKA));
        CALL P_SEND;
        COUNTREC = 0;
      END;

    COUNTREC += 1;

    IZLAZ.UVJKLASA = DATAU.KLASA;
    IZLAZ.UVJRES = DATAU.RESURS;
    IZLAZ.UVJDATOD = DATAU.DATOD;
    IZLAZ.UVJDATDO = DATAU.DATDO;
    IZLAZ.REZ_TABLICA(COUNTREC).LBL_DOGADJAJ = 'DO:';
    IZLAZ.REZ_TABLICA(COUNTREC).LBL_KORISNIK = 'K:';
    IZLAZ.REZ_TABLICA(COUNTREC).LBL_ZAHTJEV = 'Z:';
    IZLAZ.REZ_TABLICA(COUNTREC).LBL_KLASA = 'KL:';
    IZLAZ.REZ_TABLICA(COUNTREC).LBL_RESURS = 'RES:';
    IF (VACCESS.DATE_WRITTEN <> '') THEN
      IZLAZ.REZ_TABLICA(COUNTREC).DATUM =
      REPATTERN(VACCESS.DATE_WRITTEN,'DD.MM.YYYY', 'YYYY-MM-DD');

    IZLAZ.REZ_TABLICA(COUNTREC).VRIJEME = VACCESS.TIME_WRITTEN;
    IZLAZ.REZ_TABLICA(COUNTREC).DOGADJAJ = VACCESS.EVENT_QUAL;
    IZLAZ.REZ_TABLICA(COUNTREC).KORISNIK = VACCESS.EVT_USER_ID;
    IZLAZ.REZ_TABLICA(COUNTREC).ZAHTJEV = VACCESS.REQUEST;
    IZLAZ.REZ_TABLICA(COUNTREC).KLASA = VACCESS.CLASS;
    IZLAZ.REZ_TABLICA(COUNTREC).RESURS = SUBSTR(VACCESS.RES_NAME,
                                                   1,44);
 END PREPARE_SCREEN;

 P_SEND: PROC;

    IF FIRSTREC THEN
     DO;
       PAR_NUM = 4;
       FIRSTREC ='0'B;
     END;
    ELSE
     DO;
       PAR_NUM = 3;
     END;

    CALL PLITDLI(PAR_NUM,'ISRT', DCMASK, IZLAZ, DESIGN_NAME);

    IF (CSTATUS <> '  ') THEN
      CALL RZ0AER(DCMASK, 'C-ISRT3', IZLAZ, OPCIJA);

    REINIT IZLAZ;
  END P_SEND;
 END PRACF2;
